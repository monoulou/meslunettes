imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    app.path.photos: uploads/photos

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
#        form:
#            resources:
#                - ':jquery.collection.html.twig'

    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
            - 'bootstrap_3_layout.html.twig'
#            - 'VichUploaderBundle:Form:fields.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host:      '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

#FriendsOfSymfonyBundle Configuration
fos_user:
        db_driver: orm
        firewall_name: main
        user_class: MA\UserBundle\Entity\User
        from_email:
                address: noreply@meslunettes.com
                sender_name: Admin
        service:
                mailer: fos_user.mailer.twig_swift
#                mailer: fos_user.mailer.default
        registration:
                confirmation:
                    from_email:
                        address:        noreply@meslunettes.com
                        sender_name:    Admin
        resetting:
                token_ttl: 120
                email:
                    from_email:
                        address:        noreply@meslunettes.com
                        sender_name:    Admin
#                    template: email/email.txt.twig


#hwi_oauth Configuration
hwi_oauth:
   connect:
       confirmation: true
       registration_form: fos_user.registration.form.factory
   firewall_names: [main]
   fosub:
       username_iterations: 30
       properties:
           facebook: facebookId
           google: googleId
   resource_owners:
       # Facebook Access
       facebook:
           type:                facebook
           client_id:           171805370073723
           client_secret:       aa0f61033e7e4b154ec5692e490a8c6f
           scope:               "email"
           options:
               display: popup
       # Google Access
       google:
           type:                google
           client_id:           811000521463-n38phciog5lnlqfcgfjadk49kf4a9sn2.apps.googleusercontent.com
           client_secret:       4WofhougvXKM8kqA9gIFr9zt
           scope:               "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/plus.login"

vich_uploader:
    db_driver: orm
    mappings:
            photos:
                uri_prefix: '%app.path.photos%'
                upload_destination: '%kernel.root_dir%/../web/uploads/photos'
                namer: vich_uploader.namer_uniqid

                inject_on_load:     false
                delete_on_update:   true
                delete_on_remove:   true

liip_imagine :
    resolvers :
        default :
            web_path :

    filter_sets :
        cache : ~
        # the name of the "filter set"
        my_thumb :
            # adjust the image quality to 75%
            quality : 75
            # list of transformations to apply (the "filters")
            filters :
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail  : { size : [120, 40], mode : outbound }

                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
#                background : { size : [604, 204], position : center, color : '#FDFEFE' }

        my_carousel :
            filters:
                # use and setup the "downscale" filter
                downscale:
                    # input 3960x2560px -> output 1980x1280px
                    max: [600, 250]

easy_admin:
    entities:
        Owner:
            class: MA\MainBundle\Entity\Annonce
            form:
                fields: [{ property: 'images', type: 'collection', type_options: { entry_type: 'MA\MainBundle\Form\Image', by_reference: false }}]




